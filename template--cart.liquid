<!-- /templates/cart.liquid -->
{% comment %}

  For info on test orders:
    - General http://docs.shopify.com/manual/your-store/orders/test-orders
    - Shopify Payments - http://docs.shopify.com/manual/more/shopify-payments/testing-shopify-payments

{% endcomment %}
{% style %}
.template--cart-payment-icon {margin: 20px 0 0;}.rounded-checkbox {display: flex;justify-content: flex-start;}@media screen and (max-width: 767px) {.rounded-checkbox {justify-content: center;}}.subscription-wrapper .rounded-checkbox input[type=checkbox] {display:none;opacity: 0;pointer-events: none;}.subscription-wrapper .rounded-checkbox>label {cursor: pointer;text-transform: uppercase;padding: 5px 10px;font-size: 14px;font-weight: 700;line-height: 28px;color: var(--primary-btn-bg-color);transition: .2s all;border: 1px solid var(--primary-btn-bg-color);margin-top: 15px;}.subscription-wrapper .rounded-checkbox>input[type="checkbox"]:checked+label {background-color: var(--primary-btn-bg-color);color: var(--primary-btn-text-color);}
{% endstyle %}

<div class="wrapper-padded main-page-container">

  {% assign subtotal_compare_at_price = 0 %}

  {% if cart.item_count > 0 %}
    <div class="sitewide--title-wrapper">
      <h1 class="page--title">{{ 'cart.general.title' | t }}</h1>
    </div>

    <form action="{{ routes.cart_url }}" method="post" novalidate class="cart table-wrap" data-wetheme-section-type="template--cart" data-wetheme-section-id="template--cart">
      <table class="cart-table full table--responsive">
        <thead class="cart__row cart__header-labels">
          <th scope="row" colspan="2" class="text-center"></th>
          <th scope="row" class="text-center">{{ 'cart.label.price' | t }}</th>
          <th scope="row" class="text-center">{{ 'cart.label.quantity' | t }}</th>
          <th scope="row" class="text-center">{{ 'cart.label.total' | t }}</th>
        </thead>
        <tbody>
          {% for item in cart.items %}
          {%- assign property_size = item.properties | size -%} 
            <tr class="cart__row table__section">
              <td data-label="{{ 'customer.order.product' | t }}">
                <a href="{{ item.url | within: collections.all }}" class="cart__image">
                  {% comment %}
                    More image size options at:
                      - http://docs.shopify.com/themes/filters/product-img-url
                  {% endcomment %}
                  {% capture cart_page_product_image_alt %}{{ item.image.alt | default: item.title | escape }}{% endcapture %}
                  {% render 'responsive-image' with item.image, alt: cart_page_product_image_alt, blur: false %}
                </a>  
              </td>
              <td class="cart__row--product-details">
                <a href="{{ item.url }}">
                  {{ item.product.title }}
                </a>
                {% unless item.variant.title contains 'Default' %}
                  <div class="cart__meta-text">
                    {% for option in item.product.options %}
                      {{ option }}: {{ item.variant.options[forloop.index0] }}<br/>
                    {% endfor %}
                  </div>
                {% endunless %}

                {% if item.selling_plan_allocation %}
                  <div class="cart__meta-text">
                    <span>{{ item.selling_plan_allocation.selling_plan.name }}<span>
                  </div>
                {% endif %}

                {% if settings.cart_vendor_enable %}
                  <p>{{ item.vendor }}</p>
                {% endif %}

                {% comment %}
                  Optional, loop through custom product line items if available

                  For more info on line item properties, visit:
                    - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
                {% endcomment %}
                <span class="bold_ro_desc" data-product-id="{{item.id}}-{{ forloop.index0 }}"></span>          
                      
                      {% unless item.properties.frequency_num != blank  %}
                      {% if property_size > 0 %}
                      {% for p in item.properties %}
                      <div class="cart__row--property">
                        {% if p.last != blank and p.first.first != '_' %}
                        {{ p.first }}:

                        {% comment %}
                        Check if there was an uploaded file associated
                        {% endcomment %}
                        {% if p.last contains '/uploads/' %}
                        <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                        {% else %}
                        {{ p.last }}
                        {% endif %}
                        {% endif %}
                      </div>
                      {% endfor %}
                      {% endif %}
                      {% endunless %}

                      <a href="{{ routes.cart_url }}/change?line={{ forloop.index }}&amp;quantity=0" class="cart__remove">
                        <small>{{ 'cart.general.remove' | t }}</small>
                      </a>

                      {% if section.settings.enable_btn_option %}
                      <div class="subscription-wrapper"> 
                        <div class="rounded-checkbox">                
                          {%- if property_size > 0 -%}
                          {%- assign mainprice = item.price -%} 
                          {%- assign discount_amount = 100 | minus: section.settings.bold_discount_amount | divided_by: 100 -%}
                          {%- assign bold_item_price = mainprice | times: discount_amount | floor -%}
                          {%- else -%}
                          {%- assign bold_item_price = item.price -%}
                          {%- endif -%}

                          <input type="checkbox" 
                                 id="convert-{{ forloop.index }}" 
                                 value="inactivelist" 
                                 data-line="{{ forloop.index }}" 
                                 data-variant-id="{{ item.variant.id }}" 
                                 data-quantity="{{ item.quantity }}" 
                                 data-line-item-key="{{ item.key }}" 
                                 data-group-id="129688" 
                                 data-price="{{ bold_item_price }}" 
                                 data-subscription="{% if bold_item_price == item.price %}false{% else %}true{% endif %}" 
                                 data-bold-discount-amount="{{ section.settings.bold_discount_amount | escape }}" 
                                 class="subscription-checkbox{% unless bold_item_price == item.price %} downgrading{% else %} upgrading{% endunless %}" 
                                 {% unless bold_item_price == item.price %}checked=""{% endunless %}>
                          <label for="convert-{{ forloop.index }}">{{ section.settings.subscription_text }}</label> 
                        </div>
                      </div>
                      {% endif %}      
              </td>
              <td class="text-center" data-label="{{ 'cart.label.price' | t }}">
                  {%- if item.product.compare_at_price > item.final_line_price -%}
                    {% case settings.show_discount %}
                      {% when 'percentage' %}
                        <span class="cart-compare-price--with-value">
                          <del><span class="money">{{ item.variant.compare_at_price | money }}</span></del>
                          <span class="money discount--sale-color"> -{{ item.variant.compare_at_price | minus: item.final_line_price | times: 100.0 | divided_by: item.product.compare_at_price | round }}%</span>
                        </span>
                        <span class="cart-sale-price--with-discount">
                          <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_price" data-item-key="{{item.key}}" style="display:none !important;"></span>
                          <span class="money">{{ item.original_price | money }}</span>
                        </span>
                      {% when 'value' %}
                        <span class="cart-compare-price--with-value">
                          <del><span class="money">{{ item.variant.compare_at_price | money }}</span></del>
                          <span class="money discount--sale-color"> -{{ item.variant.compare_at_price | minus: item.original_price | money }}</span>
                        </span>
                        <span class="cart-sale-price--with-discount">
                          <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_price" data-item-key="{{item.key}}" style="display:none !important;"></span>
                          <span class="money">{{ item.original_price | money }}</span>
                        </span>
                      {% when 'hide' %}
                        <span class="cart-sale-price--with-discount">
                          <del><span class="money">{{ item.variant.compare_at_price | money }}</span></del>
                        </span>
                        <span class="cart-sale-price--with-discount">
                          <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_price" data-item-key="{{item.key}}" style="display:none !important;"></span>
                          <span class="order-discount discount--sale-color"><span class="money">{{ item.original_price | money }}</span></span>
                        </span>
                      {% endcase %}
                    {% else %}
                      <span class="cart-sale-price--with-discount">
                        <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_price" data-item-key="{{item.key}}" style="display:none !important;"></span>
                        <span class="money">{{ item.original_price | money }}</span>
                      </span>
                    {%- endif -%}

                  {% render 'unit-price-measurement-variant', variant: item %}
              </td>
              <td class="text-center" data-label="{{ 'cart.label.quantity' | t }}">
                <div class="js-qty-wrapper">
                  <div class="js-qty">
                    <button type="button" aria-label="-" class="js js-qty__adjust js-qty__adjust--minus icon-fallback-text" data-id="" data-qty="0">
                      <i class="fa fa-minus" aria-hidden="true"></i>
                      <span class="fallback-text">−</span>
                    </button>
                    <input type="text" class="js-qty__num" value="{{ item.quantity }}" min="1" data-id="" aria-label="quantity" pattern="[0-9]*" name="updates[]" id="updates_{{ item.id }}">
                    <button type="button" aria-label="+" class="js js-qty__adjust js-qty__adjust--plus icon-fallback-text" data-id="" data-qty="11">
                      <i class="fa fa-plus" aria-hidden="true"></i>
                      <span class="fallback-text">+</span>
                    </button>
                  </div>
                </div>
              </td>
              <td class="text-center cart-total-label" data-label="{{ 'cart.label.total' | t }}">
                {% assign original_line_price = item.original_line_price %}
                {% if item.product.compare_at_price > item.final_line_price %}
                  {% assign original_line_price = item.variant.compare_at_price | times: item.quantity %}
                {% endif %}
                {% assign subtotal_compare_at_price = subtotal_compare_at_price | plus: original_line_price %}
                {%- if original_line_price != item.final_line_price and item.line_level_discount_allocations != blank -%}
                  <span class="hidden">{{ 'products.general.regular_price' | t }}</span>
                  <span class="cart-total-label__discount">
                    <del><span class="money">{{ original_line_price | money }}</span></del>
                  </span>
                  <span class="hidden">{{ 'products.general.sale_price' | t }}</span>
                  <span class="cart-total-label__discount discount--sale-color">
                    <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_total" data-item-key="{{item.key}}" style="display:none !important;"></span>
                    <span class="money">{{ item.final_line_price | money }}</span>
                  </span>
                {% elsif original_line_price != item.final_line_price and item.line_level_discount_allocations == blank %}
                  <span class="hidden">{{ 'products.general.regular_price' | t }}</span>
                  <span class="cart-total-label__discount">
                    <del><span class="money">{{ item.variant.compare_at_price | times: item.quantity | money }}</span></del>
                  </span>
                  <span class="hidden">{{ 'products.general.sale_price' | t }}</span>
                  <span class="cart-total-label__discount discount--sale-color">
                    <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_total" data-item-key="{{item.key}}" style="display:none !important;"></span>
                    <span class="money">{{ item.final_line_price | money }}</span>
                  </span>
                {%- else -%}
                  <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_item_total" data-item-key="{{item.key}}" style="display:none !important;"></span>
                  <span class="money">{{ item.final_line_price | money }}</span>
                {%- endif -%}

                {%- if item.line_level_discount_allocations != blank -%}
                  <ul class="order-discount--cart-list discount--sale-color" aria-label="{{ 'customer.order.discount' | t }}">
                    {%- for discount_allocation in item.line_level_discount_allocations -%}
                      <li class="order-discount--item">
                        <strong>{{ discount_allocation.discount_application.title }} (-<span class="money">{{ discount_allocation.amount | money }}</span>)</strong>
                      </li>
                    {%- endfor -%}
                  </ul>
                {%- endif -%}
              </td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
      <div class="grid cart__row">
        {% if settings.cart_notes_enable %}
          <div class="grid__item two-thirds medium--one-whole small--one-whole">
            <label for="CartSpecialInstructions">{{ 'cart.general.note' | t }}</label>
            <textarea name="note" class="input-full" id="CartSpecialInstructions">{{ cart.note }}</textarea>
          </div>
        {% endif %}
        {% if settings.giftwrap_gift_note %}
          <div class="grid__item two-thirds medium--one-whole small--one-whole">
            <label for="CartGiftNote">{{ 'products.general.giftwrap_note' | t }}</label>
            <textarea id="CartGiftNote" class="input-full" placeholder="{{ 'products.general.giftwrap_note_placeholder' | t }}" name="attributes[gift_note]">{{ cart.attributes.gift_note }}</textarea>
          </div>
        {% endif %}
        <div class="grid__item text-right{% if settings.cart_notes_enable %} one-third medium--one-whole small--one-whole{% endif %}">
          {%- if cart.cart_level_discount_applications != blank -%}
            <div class="cart--order-discount-wrapper custom-font discount--sale-color">
              {%- for discount_application in cart.cart_level_discount_applications -%}
              <div class="cart--order-discount-wrapper--indiv">
                <span class="order-discount--cart-title">

                </span>
                <span class="order-discount">-<span class="money"></span></span>
              </div>
              <p>
                <span class="cart__subtotal-title"><span class="hidden">{{ 'customer.order.discount' | t }}:</span>{{- discount_application.title -}}</span>
                <span class="h3 cart__subtotal"><span class="money">{{ discount_application.total_allocated_amount | money }}</span></span>
              </p>
              {%- endfor -%}
            </div>
          {%- endif -%}

          {% if subtotal_compare_at_price != cart.total_price %}
            <span class="cart__subtotal">
              <del><span class="money">{{ subtotal_compare_at_price | money }}</span></del>
            </span>
          {% endif %}
          <p>
            <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}</span>
            <span class="h3 cart__subtotal">
              <span class="Bold-theme-hook-DO-NOT-DELETE bold_cart_total" style="display:none !important;"></span>
              <span class="money">{{ cart.total_price | money }}</span>
            </span>
          </p>

          {%- capture taxes_shipping_checkout -%}
            {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
              {{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
            {%- elsif cart.taxes_included -%}
              {{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}
            {%- elsif shop.shipping_policy.body != blank -%}
              {{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
            {%- else -%}
              {{ 'cart.general.taxes_and_shipping_at_checkout' | t }}
            {%- endif -%}
          {%- endcapture -%}
          
          {% if section.settings.cart_extra_note != blank %}<div class="cart__shipping rte">{{ section.settings.cart_extra_note }}</div>{% endif %}
          
          <div class="cart__shipping rte"><em>{{ taxes_shipping_checkout }}</em></div>   
          <input type="submit" name="update" class="btn--secondary update-cart cart--button-update" value="{{ 'cart.general.update' | t }}">
          <input type="submit" name="checkout" class="btn cart--button-checkout" value="{{ 'cart.general.checkout' | t }}">
          {% if additional_checkout_buttons and settings.enable-additional-checkout-buttons %}
          <div class="additional-checkout-buttons additional-checkout-buttons--vertical">
              {{ content_for_additional_checkout_buttons }}
          </div>
          {% endif %}
          
          {% if section.settings.show_methods_of_payment %}
          <ul class="inline-list template--cart-payment-icon">
            {% for type in shop.enabled_payment_types %}
            {{ type | payment_type_svg_tag: class:'payment-icon' }}
            {% endfor %}
          </ul>
          {% endif %}
        </div>
      </div>
    </form>

  {% else %}
    <div class="sitewide--title-wrapper">
      <h1 class="page--title">{{ 'cart.general.title' | t }}</h1>
    </div>
    <div class="cart--empty-cart">
      <p>{{ 'cart.general.empty' | t }}</p>
      <p>{{ 'cart.general.continue_browsing_html' | t }}</p>
    </div>

  {% endif %}

</div>
<script>
  window.addEventListener('DOMContentLoaded', function() { 
    var InputRoundedCheckbox = document.querySelectorAll('.rounded-checkbox input');
    var LabelRoundedCheckbox = document.querySelectorAll('.rounded-checkbox label');
    var SubscriptionCheckbox = document.querySelectorAll('.subscription-checkbox');
    var convertQueue = [];

    var moveAlong = function() {
      if (convertQueue.length) {
        var request = convertQueue.shift();

        if (request.type === 'add') {
          addConvertItem(request.data);
          console.log(request.type,request.data);
        } else if (request.type === 'remove') {
          removeConvertItem(request.data);
          console.log(request.type,request.data);
        }
      } else {
        document.location.href = '/cart';
      }

    }
        
    var removeConvertItem = function(postData) {
      fetch('/cart/change.js', {
        method: 'POST',
        credentials: 'same-origin',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify(postData)
      }).then(function (data) {
        moveAlong();
        if (data.status == 200) {
          window.location.reload;
          return
        }
        else {
          console.log('Request returned an error', data)
        };
      })
      .catch(function (error) {
        console.log('Request failed', error);
      });
    }

    var addConvertItem = function(postData) {
      fetch('/cart/add.js', {
        method: 'POST',
        credentials: 'same-origin',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify(postData)
      }).then(function (data) {
        moveAlong();
        if (data.status == 200) {
          window.location.reload;
          return
        }
        else {
          console.log('Request returned an error', data)
        };
      })
      .catch(function (error) {
        console.log('Request failed', error);
      });
    }

    function addSubscriptionToCart(itemData,boldDiscountAmount) {
      var lineItemIndex = itemData.line;
      var variantID = itemData.variantId;
      var itemQuantity = itemData.quantity;
      var groupID = itemData.groupId;
      var itemPrice = itemData.price;
      var isCurrentlySubscription = itemData.subscription;
      var itemKey = itemData.lineItemKey;

      var removeRequest = {
        type: "remove",
        data: {
          quantity: 0,
          id: itemKey
        }
      };  


      var addRequest = {
        type: "add",
        data: {
          quantity: 1,
          id: variantID
        }
      }

      if (isCurrentlySubscription == 'false') {
        addRequest.data.properties = {
          'frequency_num': 1,
          'frequency_type': 3,
          '_ro_discount_percentage': boldDiscountAmount,
          '_secondary_discount_percent': boldDiscountAmount,
          '_secondary_discount_required_orders': 1,
          '_ro_unformatted_price': itemPrice,
          'frequency_type_text': 'Month(s)',
          'group_id': groupID
        }
      }

      convertQueue.push(removeRequest);
      convertQueue.push(addRequest);

      moveAlong();
    }

    for (let i = 0; i < InputRoundedCheckbox.length; i++) { 
      InputRoundedCheckbox[i].addEventListener('click', function() {
        let InputRoundedCheckboxClassList = InputRoundedCheckbox[i].classList;
        if(InputRoundedCheckboxClassList.contains("upgrading")) {       
          this.classList.remove('upgrading');
          this.classList.add('downgrading');
          LabelRoundedCheckbox[i].innerHTML = 'ADDING AUTOSHIP DISCOUNT...';
        }
        else{
          this.classList.remove('downgrading');
          this.classList.add('upgrading');
          LabelRoundedCheckbox[i].innerHTML = 'REMOVING AUTOSHIP DISCOUNT...';
        }
      });  
    }
    for (let j = 0; j < InputRoundedCheckbox.length; j++) { 
      SubscriptionCheckbox[j].addEventListener('change', (event) => {
        let boldDiscountAmount = SubscriptionCheckbox[j].dataset.boldDiscountAmount;
        addSubscriptionToCart(event.srcElement.dataset,boldDiscountAmount);
      });
    }
  });  
</script>
{% schema %}
{
    "name": "Template Cart",
    "settings": [
        {
            "type": "checkbox",
            "id": "show_methods_of_payment",
            "label": {
                "en": "Show payment icons",
                "de": "Zahlungssymbole anzeigen",
                "es": "Mostrar iconos de pago",
                "fr": "Afficher les icônes de paiement",
                "pt-PT": "Mostrar ícones de pagamento"
            }
        },
        {
            "type": "richtext",
            "id": "cart_extra_note",
            "label": "Cart extra note"   
		},
        {
            "type": "header",
            "content": "Bold Option"
        },
        {
            "type": "checkbox",
            "id": "enable_btn_option",
            "label": "Bold checkbox option"
        },
        {
            "type": "text",
            "id": "bold_discount_amount",
            "label": "Discount Amount in percentage",
            "info": "16.68% = 16.68"
        },
        {
            "type": "textarea",
            "id": "subscription_text",
            "label": "Subscription text"
        }
    ]
}
{% endschema %}
